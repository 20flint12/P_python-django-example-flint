// Generated by CoffeeScript 1.8.0
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

module.exports = (function() {
  var $, Backbone, Collection, Model;
  $ = require('jquery');
  Backbone = require('backbone');
  Model = require('./../model/model.js');
  Collection = (function(_super) {
    __extends(Collection, _super);

    function Collection() {
      this.reqError = __bind(this.reqError, this);
      this.reqSuccess = __bind(this.reqSuccess, this);
      return Collection.__super__.constructor.apply(this, arguments);
    }

    Collection.prototype.model = Model;

    Collection.prototype.url = 'http://testastroflint2.cloudcontrolled.com/json/';

    Collection.prototype.initialize = function() {
      return this.bindEvents();
    };

    Collection.prototype.bindEvents = function() {};

    Collection.prototype.getReqData = function() {
      var timeWaiting;
      timeWaiting = 5000;
      return {
        url: this.url,
        data: {},
        dataType: 'json',
        timeout: timeWaiting,
        cache: false,
        success: this.reqSuccess,
        error: this.reqError
      };
    };

    Collection.prototype.requestModels = function() {
      var data;
      data = this.getReqData();
      return this.fetch(data, {
        reset: true
      });
    };

    Collection.prototype.reqSuccess = function(response) {
      return console.log(response);
    };

    Collection.prototype.reqError = function() {
      return console.log('Sorry there is sime error while requesting');
    };

    return Collection;

  })(Backbone.Collection);
  return Collection;
})();
