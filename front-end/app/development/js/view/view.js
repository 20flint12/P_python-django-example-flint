// Generated by CoffeeScript 1.8.0
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

module.exports = (function() {
  var $, Backbone, View, getTemplate, mustache;
  Backbone = require('backbone');
  $ = require('jquery');
  mustache = require('mustache');
  getTemplate = function(baseTemplte) {
    return function(model) {
      return mustache.render(baseTemplte, model);
    };
  };
  View = (function(_super) {
    __extends(View, _super);

    function View() {
      this.render = __bind(this.render, this);
      return View.__super__.constructor.apply(this, arguments);
    }

    View.prototype.el = '.astro-calendar-list';

    View.prototype.template = getTemplate($('#astro-week-template').html());

    View.prototype.initialize = function() {
      this.bindEvents();
      return this.collection.requestModels();
    };

    View.prototype.bindEvents = function() {
      return this.listenTo(this.collection, 'reset', this.render);
    };

    View.prototype.render = function(collection) {
      var ind, template, val;
      template = '';
      for (ind in collection) {
        val = collection[ind];
        template += this.template(val);
      }
      return this.$el.empty().append(template);
    };

    return View;

  })(Backbone.View);
  return View;
})();
