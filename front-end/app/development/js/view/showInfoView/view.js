// Generated by CoffeeScript 1.8.0
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

module.exports = (function() {
  var $, Backbone, ShowInfoView, getTemplate, mustache;
  Backbone = require('backbone');
  $ = require('jquery');
  mustache = require('mustache');
  getTemplate = function(baseTemplte) {
    return function(model) {
      return mustache.render(baseTemplte, model);
    };
  };
  ShowInfoView = (function(_super) {
    __extends(ShowInfoView, _super);

    function ShowInfoView() {
      this.render = __bind(this.render, this);
      this.redrawView = __bind(this.redrawView, this);
      return ShowInfoView.__super__.constructor.apply(this, arguments);
    }

    ShowInfoView.prototype.el = '#show-info';

    ShowInfoView.prototype.template = getTemplate($('#astro-show-info').html());

    ShowInfoView.prototype.events = {};

    ShowInfoView.prototype.initialize = function() {
      return this.bindEvents();
    };

    ShowInfoView.prototype.bindEvents = function() {
      return this.collection.on('change:isShowing', this.redrawView);
    };

    ShowInfoView.prototype.redrawView = function(model) {
      if (this.$el.hasClass('un-displayed')) {
        this.$el.removeClass('un-displayed');
      }
      return this.render(model);
    };

    ShowInfoView.prototype.render = function(model) {
      return this.$el.empty().append(this.template(model.toJSON()));
    };

    return ShowInfoView;

  })(Backbone.View);
  return ShowInfoView;
})();
